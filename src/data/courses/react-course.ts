import type { GamifiedCourse, Phase, Module } from "@/types";

// Phase 1: React Foundations
const phase1Modules: Module[] = [
  {
    id: "react-1.1",
    phaseId: "react-phase-1",
    number: "1.1",
    title: "React Fundamentals",
    questName: "The Component Journey",
    description:
      "Master the foundational concepts of React including components, JSX, props, and events.",
    learningObjectives: [
      "Understand what React is and why it exists",
      "Learn the virtual DOM concept",
      "Create components (functional approach)",
      "Understand JSX syntax and rules",
      "Master props and component composition",
      "Learn conditional rendering",
      "Understand lists and keys",
      "Handle events in React",
    ],
    projects: [
      {
        id: "react-1.1-p1",
        name: "Personal Portfolio",
        description:
          "Build a multi-component portfolio site with navigation and interactive elements",
        xp: 100,
        successCriteria: [
          "Fully functional, component-based site",
          "Multiple components with proper props",
          "Working navigation",
          "Interactive elements with event handlers",
        ],
        timeEstimate: "4-6 hours",
      },
      {
        id: "react-1.1-p2",
        name: "Interactive Card Gallery",
        description:
          "Create a dynamic card gallery with user interactions and list rendering",
        xp: 75,
        successCriteria: [
          "Dynamic content rendering",
          "User interaction handling",
          "Proper list rendering with keys",
        ],
        timeEstimate: "2-3 hours",
      },
    ],
    challenges: [
      {
        id: "react-1.1-c1",
        name: "First Component",
        description: "Create your first React component",
        xp: 25,
        difficulty: "beginner",
        type: "completion",
      },
      {
        id: "react-1.1-c2",
        name: "Props Master",
        description: "Pass 10 different prop types successfully",
        xp: 50,
        difficulty: "beginner",
        type: "completion",
      },
      {
        id: "react-1.1-c3",
        name: "Event Handler",
        description: "Implement 15 different event handlers",
        xp: 75,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-1.1-c4",
        name: "Boss Challenge",
        description: "Build component library with 20 reusable components",
        xp: 150,
        difficulty: "advanced",
        type: "boss",
      },
    ],
  },
  {
    id: "react-1.2",
    phaseId: "react-phase-1",
    number: "1.2",
    title: "State & Lifecycle with Hooks",
    questName: "Making Components Come Alive",
    description:
      "Master state management and side effects with useState and useEffect hooks.",
    learningObjectives: [
      "Understand state management basics",
      "Master useState hook",
      "Learn when to use state vs props",
      "Understand component re-rendering",
      "Master useEffect hook",
      "Learn effect cleanup",
      "Understand dependency arrays",
      "Handle side effects properly",
    ],
    projects: [
      {
        id: "react-1.2-p1",
        name: "Todo Application",
        description:
          "Build a full-featured todo app with CRUD operations and local storage persistence",
        xp: 200,
        successCriteria: [
          "CRUD operations working",
          "State management with useState",
          "Local storage persistence with useEffect",
          "Filtering and sorting functionality",
        ],
        timeEstimate: "6-8 hours",
      },
      {
        id: "react-1.2-p2",
        name: "Weather Dashboard",
        description:
          "Create a real-time weather dashboard with API integration and auto-refresh",
        xp: 250,
        successCriteria: [
          "Fetch data from weather API",
          "Loading states handled",
          "Error handling implemented",
          "Auto-refresh with useEffect",
        ],
        timeEstimate: "8-10 hours",
      },
    ],
    challenges: [
      {
        id: "react-1.2-c1",
        name: "State Warrior",
        description: "Manage state in 20 different scenarios",
        xp: 100,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-1.2-c2",
        name: "Effect Master",
        description: "Write 15 useEffect implementations correctly",
        xp: 125,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-1.2-c3",
        name: "Cleanup Champion",
        description: "Properly cleanup 10 effects to prevent memory leaks",
        xp: 100,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-1.2-c4",
        name: "Boss Challenge",
        description: "Build real-time dashboard with multiple data sources",
        xp: 300,
        difficulty: "advanced",
        type: "boss",
      },
    ],
  },
  {
    id: "react-1.3",
    phaseId: "react-phase-1",
    number: "1.3",
    title: "Forms & Controlled Components",
    questName: "Master of Inputs",
    description:
      "Master form handling with controlled components and validation strategies.",
    learningObjectives: [
      "Understand controlled vs uncontrolled components",
      "Handle form inputs with state",
      "Implement form validation",
      "Handle multiple inputs efficiently",
      "Master different input types",
      "Learn form submission",
      "Understand refs and uncontrolled inputs",
      "Build custom form components",
    ],
    projects: [
      {
        id: "react-1.3-p1",
        name: "Registration Form System",
        description:
          "Multi-step form wizard with real-time validation and error messaging",
        xp: 225,
        successCriteria: [
          "Multi-step form working",
          "Real-time validation",
          "Complex validation rules",
          "Proper error messaging",
        ],
        timeEstimate: "8-10 hours",
      },
      {
        id: "react-1.3-p2",
        name: "Survey Builder",
        description:
          "Dynamic survey system with multiple question types and conditional logic",
        xp: 275,
        successCriteria: [
          "Dynamic form generation",
          "Multiple question types supported",
          "Conditional questions working",
          "Results visualization",
        ],
        timeEstimate: "10-12 hours",
      },
    ],
    challenges: [
      {
        id: "react-1.3-c1",
        name: "Form Master",
        description: "Build 10 different form types",
        xp: 150,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-1.3-c2",
        name: "Validation Expert",
        description: "Implement 20 different validation rules",
        xp: 175,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-1.3-c3",
        name: "UX Champion",
        description: "Perfect form user experience with accessibility",
        xp: 200,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-1.3-c4",
        name: "Boss Challenge",
        description: "Build form builder with drag-and-drop",
        xp: 400,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
];

// Phase 2: Intermediate React
const phase2Modules: Module[] = [
  {
    id: "react-2.1",
    phaseId: "react-phase-2",
    number: "2.1",
    title: "Advanced Hooks Mastery",
    questName: "Hook Sorcerer",
    description:
      "Master all React hooks including useContext, useReducer, useCallback, useMemo, and custom hooks.",
    learningObjectives: [
      "Master useContext for global state",
      "Understand useReducer for complex state",
      "Learn useCallback for optimization",
      "Master useMemo for expensive computations",
      "Understand useRef for mutable values",
      "Learn useImperativeHandle",
      "Master useLayoutEffect",
      "Create custom hooks",
    ],
    projects: [
      {
        id: "react-2.1-p1",
        name: "E-Commerce Shopping Cart",
        description:
          "Full shopping cart with useReducer, context, and performance optimizations",
        xp: 400,
        successCriteria: [
          "Cart using useReducer",
          "Global state with context",
          "Optimized with useCallback and useMemo",
          "Persistent storage",
        ],
        timeEstimate: "12-15 hours",
      },
      {
        id: "react-2.1-p2",
        name: "Custom Hook Library",
        description:
          "Build 10 reusable custom hooks and publish as npm package",
        xp: 350,
        successCriteria: [
          "10 custom hooks created",
          "useLocalStorage, useDebounce, useFetch, etc.",
          "Documented and tested",
          "Published as npm package",
        ],
        timeEstimate: "10-12 hours",
      },
    ],
    challenges: [
      {
        id: "react-2.1-c1",
        name: "Context Master",
        description: "Use context effectively in 10 scenarios",
        xp: 200,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.1-c2",
        name: "Reducer Wizard",
        description: "Implement 15 different reducers",
        xp: 225,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.1-c3",
        name: "Optimization Expert",
        description: "Prevent 20 unnecessary re-renders",
        xp: 250,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.1-c4",
        name: "Custom Hook Creator",
        description: "Build 20 custom hooks",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.1-c5",
        name: "Boss Challenge",
        description: "Build complete state management solution",
        xp: 600,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-2.2",
    phaseId: "react-phase-2",
    number: "2.2",
    title: "Component Patterns & Composition",
    questName: "Pattern Master",
    description:
      "Master advanced component patterns including compound components, render props, and HOCs.",
    learningObjectives: [
      "Master compound components",
      "Learn render props pattern",
      "Understand higher-order components (HOCs)",
      "Master children patterns",
      "Learn slot patterns",
      "Understand controlled vs uncontrolled patterns",
      "Master state reducer pattern",
      "Learn prop getters pattern",
    ],
    projects: [
      {
        id: "react-2.2-p1",
        name: "UI Component Library",
        description:
          "Build 15 reusable components with compound and render props patterns",
        xp: 500,
        successCriteria: [
          "15 reusable components",
          "Compound components (Tabs, Accordion)",
          "Render props for flexibility",
          "Comprehensive examples",
        ],
        timeEstimate: "15-20 hours",
      },
      {
        id: "react-2.2-p2",
        name: "Advanced Modal System",
        description:
          "Flexible modal system with compound components and accessibility",
        xp: 375,
        successCriteria: [
          "Compound component API",
          "Portal implementation",
          "Focus management",
          "Keyboard navigation",
        ],
        timeEstimate: "10-12 hours",
      },
    ],
    challenges: [
      {
        id: "react-2.2-c1",
        name: "Pattern Apprentice",
        description: "Implement 5 component patterns",
        xp: 200,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.2-c2",
        name: "Composition Master",
        description: "Build 10 highly composable components",
        xp: 275,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.2-c3",
        name: "API Designer",
        description: "Create elegant component APIs",
        xp: 250,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.2-c4",
        name: "Boss Challenge",
        description: "Build headless UI component system",
        xp: 700,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-2.3",
    phaseId: "react-phase-2",
    number: "2.3",
    title: "React Router & Navigation",
    questName: "Navigation Navigator",
    description:
      "Master client-side routing with React Router including dynamic routes and protected routes.",
    learningObjectives: [
      "Understand client-side routing",
      "Master React Router v6",
      "Learn dynamic routing",
      "Handle route parameters",
      "Implement nested routes",
      "Master protected routes",
      "Learn programmatic navigation",
      "Handle 404 pages and redirects",
    ],
    projects: [
      {
        id: "react-2.3-p1",
        name: "Multi-Page Blog Platform",
        description:
          "Complete blog with routing, dynamic pages, and SEO-friendly URLs",
        xp: 350,
        successCriteria: [
          "Complete routing implemented",
          "Dynamic blog post pages",
          "Category filtering with routes",
          "Search with URL params",
        ],
        timeEstimate: "10-12 hours",
      },
      {
        id: "react-2.3-p2",
        name: "Dashboard with Authentication",
        description:
          "Secure dashboard with protected routes and role-based access",
        xp: 400,
        successCriteria: [
          "Protected route implementation",
          "Role-based access control",
          "Navigation guards",
          "Breadcrumb navigation",
        ],
        timeEstimate: "12-15 hours",
      },
    ],
    challenges: [
      {
        id: "react-2.3-c1",
        name: "Route Master",
        description: "Implement 20 different routes",
        xp: 150,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.3-c2",
        name: "Dynamic Router",
        description: "Handle 10 dynamic route scenarios",
        xp: 175,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.3-c3",
        name: "Protection Expert",
        description: "Implement 5 guard patterns",
        xp: 200,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.3-c4",
        name: "Boss Challenge",
        description: "Build complete app with nested routing",
        xp: 500,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-2.4",
    phaseId: "react-phase-2",
    number: "2.4",
    title: "API Integration & Data Fetching",
    questName: "Data Fetcher Extraordinaire",
    description:
      "Master data fetching patterns including React Query, caching, and optimistic updates.",
    learningObjectives: [
      "Master fetch and axios",
      "Handle loading states",
      "Implement error handling",
      "Learn data caching strategies",
      "Understand React Query/SWR",
      "Master optimistic updates",
      "Handle pagination",
      "Implement infinite scroll",
    ],
    projects: [
      {
        id: "react-2.4-p1",
        name: "Social Media Feed",
        description:
          "Infinite scroll feed with optimistic updates and real-time data",
        xp: 450,
        successCriteria: [
          "Fetch posts from API",
          "Infinite scroll working",
          "Optimistic UI updates",
          "Real-time updates handled",
        ],
        timeEstimate: "12-15 hours",
      },
      {
        id: "react-2.4-p2",
        name: "Admin Dashboard",
        description:
          "Full-featured dashboard with multiple APIs and data visualization",
        xp: 500,
        successCriteria: [
          "Multiple API endpoints integrated",
          "Complex data relationships",
          "Search and filtering",
          "Data visualization",
        ],
        timeEstimate: "15-18 hours",
      },
    ],
    challenges: [
      {
        id: "react-2.4-c1",
        name: "API Master",
        description: "Integrate 10 different APIs",
        xp: 200,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.4-c2",
        name: "Loading State Expert",
        description: "Handle 15 loading scenarios",
        xp: 175,
        difficulty: "intermediate",
        type: "completion",
      },
      {
        id: "react-2.4-c3",
        name: "Error Handler",
        description: "Implement robust error handling",
        xp: 225,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.4-c4",
        name: "Cache Wizard",
        description: "Implement efficient caching strategies",
        xp: 250,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-2.4-c5",
        name: "Boss Challenge",
        description: "Build offline-first application",
        xp: 600,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
];

// Phase 3: Advanced React
const phase3Modules: Module[] = [
  {
    id: "react-3.1",
    phaseId: "react-phase-3",
    number: "3.1",
    title: "Performance Optimization",
    questName: "Speed Demon",
    description:
      "Master React performance optimization techniques including memoization, code splitting, and virtualization.",
    learningObjectives: [
      "Understand React rendering behavior",
      "Master React.memo",
      "Learn useMemo and useCallback effectively",
      "Implement code splitting",
      "Master lazy loading",
      "Use React DevTools Profiler",
      "Understand bundle optimization",
      "Learn virtualization techniques",
    ],
    projects: [
      {
        id: "react-3.1-p1",
        name: "High-Performance Data Table",
        description:
          "Render 10,000+ rows at 60 FPS with virtualization and optimization",
        xp: 500,
        successCriteria: [
          "10,000+ rows rendering efficiently",
          "Virtualization implemented",
          "Sorting and filtering",
          "60 FPS maintained",
        ],
        timeEstimate: "15-18 hours",
      },
      {
        id: "react-3.1-p2",
        name: "Performance Audit & Optimization",
        description:
          "Audit and optimize a slow application, measure improvements",
        xp: 450,
        successCriteria: [
          "Bottlenecks identified",
          "Optimizations implemented",
          "Improvements measured",
          "50%+ performance gain",
        ],
        timeEstimate: "12-15 hours",
      },
    ],
    challenges: [
      {
        id: "react-3.1-c1",
        name: "Memo Master",
        description: "Optimize 20 components with memoization",
        xp: 250,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.1-c2",
        name: "Bundle Optimizer",
        description: "Reduce bundle size by 40%",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.1-c3",
        name: "Render Reducer",
        description: "Eliminate unnecessary renders",
        xp: 275,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.1-c4",
        name: "Virtualization Expert",
        description: "Implement 5 virtualized lists",
        xp: 325,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.1-c5",
        name: "Boss Challenge",
        description: "Optimize app to perfect Lighthouse score",
        xp: 800,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-3.2",
    phaseId: "react-phase-3",
    number: "3.2",
    title: "State Management at Scale",
    questName: "State Architect",
    description:
      "Master enterprise state management with Redux Toolkit, Zustand, and Recoil.",
    learningObjectives: [
      "Understand state management philosophies",
      "Master Redux Toolkit",
      "Learn Zustand",
      "Understand Recoil",
      "Master Jotai",
      "Compare state management solutions",
      "Implement middleware patterns",
      "Handle complex state logic",
    ],
    projects: [
      {
        id: "react-3.2-p1",
        name: "Redux Task Management App",
        description:
          "Complex task app with Redux Toolkit, RTK Query, and undo/redo",
        xp: 550,
        successCriteria: [
          "Redux Toolkit implemented",
          "RTK Query for API",
          "Optimistic updates",
          "Undo/redo functionality",
        ],
        timeEstimate: "18-20 hours",
      },
      {
        id: "react-3.2-p2",
        name: "State Management Comparison",
        description:
          "Build same app with 3 libraries, compare and document trade-offs",
        xp: 500,
        successCriteria: [
          "Same app with 3 libraries",
          "Trade-offs documented",
          "Performance comparison",
          "DX analysis",
        ],
        timeEstimate: "15-18 hours",
      },
    ],
    challenges: [
      {
        id: "react-3.2-c1",
        name: "Redux Master",
        description: "Build 5 apps with Redux",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.2-c2",
        name: "Middleware Wizard",
        description: "Create custom middleware",
        xp: 275,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.2-c3",
        name: "State Designer",
        description: "Design scalable state architecture",
        xp: 350,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.2-c4",
        name: "Boss Challenge",
        description: "Migrate large app between state libraries",
        xp: 900,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-3.3",
    phaseId: "react-phase-3",
    number: "3.3",
    title: "Testing React Applications",
    questName: "Quality Guardian",
    description:
      "Master testing with React Testing Library, Jest, and Playwright for E2E tests.",
    learningObjectives: [
      "Understand testing philosophy",
      "Master React Testing Library",
      "Learn unit testing components",
      "Implement integration tests",
      "Master mocking strategies",
      "Test custom hooks",
      "Learn E2E testing with Playwright",
      "Understand test-driven development",
    ],
    projects: [
      {
        id: "react-3.3-p1",
        name: "Fully Tested Component Library",
        description:
          "Component library with 100% test coverage and visual regression tests",
        xp: 600,
        successCriteria: [
          "All components tested",
          "100% coverage achieved",
          "Accessibility tested",
          "Visual regression tests",
        ],
        timeEstimate: "20-25 hours",
      },
      {
        id: "react-3.3-p2",
        name: "E2E Testing Suite",
        description:
          "Comprehensive E2E tests for critical user flows with CI/CD integration",
        xp: 500,
        successCriteria: [
          "Critical user flows tested",
          "Authentication tested",
          "Payment flows tested",
          "CI/CD integration",
        ],
        timeEstimate: "15-18 hours",
      },
    ],
    challenges: [
      {
        id: "react-3.3-c1",
        name: "Test Writer",
        description: "Write 100 component tests",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.3-c2",
        name: "Coverage Champion",
        description: "Achieve 100% test coverage",
        xp: 350,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.3-c3",
        name: "Mock Master",
        description: "Mock 20 different scenarios",
        xp: 275,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.3-c4",
        name: "E2E Expert",
        description: "Write 30 E2E tests",
        xp: 325,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.3-c5",
        name: "Boss Challenge",
        description: "Implement full TDD workflow for new feature",
        xp: 700,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-3.4",
    phaseId: "react-phase-3",
    number: "3.4",
    title: "React & TypeScript",
    questName: "Type-Safe React Master",
    description:
      "Master TypeScript with React for type-safe components and applications.",
    learningObjectives: [
      "Type React components",
      "Master prop types with TypeScript",
      "Type hooks correctly",
      "Implement generic components",
      "Type context and reducers",
      "Handle events with types",
      "Type HOCs and render props",
      "Master utility types for React",
    ],
    projects: [
      {
        id: "react-3.4-p1",
        name: "Type-Safe Component Library",
        description:
          "Build fully typed component library with polymorphic and generic components",
        xp: 550,
        successCriteria: [
          "Perfect types for all components",
          "Polymorphic components",
          "Generic components",
          "Type documentation",
        ],
        timeEstimate: "18-20 hours",
      },
      {
        id: "react-3.4-p2",
        name: "TypeScript Migration",
        description:
          "Migrate JavaScript React app to TypeScript, document the process",
        xp: 500,
        successCriteria: [
          "Complete migration",
          "All types added",
          "Zero type errors",
          "Process documented",
        ],
        timeEstimate: "15-18 hours",
      },
    ],
    challenges: [
      {
        id: "react-3.4-c1",
        name: "Type Master",
        description: "Type 50 React components",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.4-c2",
        name: "Generic Wizard",
        description: "Create 10 generic components",
        xp: 275,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.4-c3",
        name: "Migration Expert",
        description: "Migrate 5 apps to TypeScript",
        xp: 350,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.4-c4",
        name: "Boss Challenge",
        description: "Build type-safe form library with full inference",
        xp: 800,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-3.5",
    phaseId: "react-phase-3",
    number: "3.5",
    title: "Advanced Patterns & Architecture",
    questName: "Architecture Visionary",
    description:
      "Master scalable React architecture including micro-frontends and monorepo management.",
    learningObjectives: [
      "Design scalable folder structures",
      "Master feature-based architecture",
      "Implement micro-frontends",
      "Learn monorepo management",
      "Master dependency injection patterns",
      "Implement plugin architectures",
      "Design component systems",
      "Handle technical debt",
    ],
    projects: [
      {
        id: "react-3.5-p1",
        name: "Enterprise Application Architecture",
        description:
          "Design complete enterprise app architecture with monorepo and documentation",
        xp: 700,
        successCriteria: [
          "Complete architecture designed",
          "Feature-based structure",
          "Monorepo setup",
          "Comprehensive documentation",
        ],
        timeEstimate: "20-25 hours",
      },
      {
        id: "react-3.5-p2",
        name: "Micro-Frontend Implementation",
        description:
          "Build multiple micro-frontends with shell app and independent deployment",
        xp: 650,
        successCriteria: [
          "Multiple micro-frontends built",
          "Shell application working",
          "Inter-app communication",
          "Independent deployment",
        ],
        timeEstimate: "18-22 hours",
      },
    ],
    challenges: [
      {
        id: "react-3.5-c1",
        name: "Architect",
        description: "Design 5 application architectures",
        xp: 400,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.5-c2",
        name: "Refactoring Master",
        description: "Restructure legacy codebase",
        xp: 450,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.5-c3",
        name: "Documentation Expert",
        description: "Document complex architecture",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.5-c4",
        name: "Boss Challenge",
        description: "Build extensible plugin system",
        xp: 1000,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
  {
    id: "react-3.6",
    phaseId: "react-phase-3",
    number: "3.6",
    title: "React Ecosystem & Tools",
    questName: "Ecosystem Explorer",
    description:
      "Master the React ecosystem including Next.js, Remix, and modern development tools.",
    learningObjectives: [
      "Master Next.js for SSR/SSG",
      "Learn Remix framework",
      "Understand React Server Components",
      "Master Vite for development",
      "Learn animation libraries (Framer Motion)",
      "Implement UI libraries (MUI, Chakra)",
      "Master form libraries (React Hook Form)",
      "Understand the broader ecosystem",
    ],
    projects: [
      {
        id: "react-3.6-p1",
        name: "Next.js Full-Stack Application",
        description:
          "Production Next.js app with SSR, API routes, auth, and SEO optimization",
        xp: 800,
        successCriteria: [
          "SSR blog platform built",
          "API routes implemented",
          "Authentication added",
          "SEO optimized",
        ],
        timeEstimate: "25-30 hours",
      },
      {
        id: "react-3.6-p2",
        name: "Animated Portfolio",
        description:
          "Stunning portfolio with Framer Motion animations and page transitions",
        xp: 600,
        successCriteria: [
          "Framer Motion animations",
          "Page transitions",
          "Interactive elements",
          "Performance optimized",
        ],
        timeEstimate: "15-20 hours",
      },
    ],
    challenges: [
      {
        id: "react-3.6-c1",
        name: "Next.js Master",
        description: "Build 5 Next.js applications",
        xp: 400,
        difficulty: "expert",
        type: "completion",
      },
      {
        id: "react-3.6-c2",
        name: "Animation Expert",
        description: "Create 20 complex animations",
        xp: 350,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.6-c3",
        name: "Framework Explorer",
        description: "Try 5 different frameworks",
        xp: 300,
        difficulty: "advanced",
        type: "completion",
      },
      {
        id: "react-3.6-c4",
        name: "Boss Challenge",
        description: "Build and deploy production SaaS with Next.js",
        xp: 1200,
        difficulty: "expert",
        type: "boss",
      },
    ],
  },
];

// Define phases
const phases: Phase[] = [
  {
    id: "react-phase-1",
    courseId: "react-course",
    number: 1,
    title: "React Foundations",
    level: "React Apprentice",
    duration: "15-20 hours",
    modules: phase1Modules,
  },
  {
    id: "react-phase-2",
    courseId: "react-course",
    number: 2,
    title: "Intermediate React",
    level: "React Developer",
    duration: "20-25 hours",
    modules: phase2Modules,
  },
  {
    id: "react-phase-3",
    courseId: "react-course",
    number: 3,
    title: "Advanced React",
    level: "React Expert",
    duration: "25-30 hours",
    modules: phase3Modules,
  },
];

// Level thresholds
const levelThresholds = [
  { level: 1, minXP: 0, title: "React Apprentice" },
  { level: 2, minXP: 200, title: "React Apprentice" },
  { level: 3, minXP: 400, title: "React Apprentice" },
  { level: 4, minXP: 650, title: "React Apprentice" },
  { level: 5, minXP: 1000, title: "React Apprentice" },
  { level: 6, minXP: 1500, title: "Component Creator" },
  { level: 7, minXP: 2000, title: "Component Creator" },
  { level: 8, minXP: 2500, title: "Component Creator" },
  { level: 9, minXP: 3000, title: "Component Creator" },
  { level: 10, minXP: 3500, title: "Component Creator" },
  { level: 11, minXP: 4000, title: "React Developer" },
  { level: 12, minXP: 4500, title: "React Developer" },
  { level: 13, minXP: 5000, title: "React Developer" },
  { level: 14, minXP: 5750, title: "React Developer" },
  { level: 15, minXP: 6500, title: "React Developer" },
  { level: 16, minXP: 7500, title: "React Expert" },
  { level: 17, minXP: 8500, title: "React Expert" },
  { level: 18, minXP: 9500, title: "React Expert" },
  { level: 19, minXP: 10500, title: "React Expert" },
  { level: 20, minXP: 11500, title: "React Expert" },
  { level: 21, minXP: 12500, title: "React Architect" },
  { level: 22, minXP: 13500, title: "React Architect" },
  { level: 23, minXP: 15000, title: "React Architect" },
  { level: 24, minXP: 16500, title: "React Architect" },
  { level: 25, minXP: 17500, title: "React Architect" },
  { level: 26, minXP: 19000, title: "React Master" },
];

// Calculate total XP
const totalXP = phases.reduce((phaseSum, phase) => {
  return (
    phaseSum +
    phase.modules.reduce((moduleSum, module) => {
      const projectXP = module.projects.reduce((sum, p) => sum + p.xp, 0);
      const challengeXP = module.challenges.reduce((sum, c) => sum + c.xp, 0);
      return moduleSum + projectXP + challengeXP;
    }, 0)
  );
}, 0);

// React course definition
export const reactCourse: GamifiedCourse = {
  id: "react-course",
  title: "React Complete Course",
  description:
    "Modern React Development for Interview Success & Production Excellence. Transform from beginner to production-ready React developer.",
  instructor: {
    id: "instructor-1",
    userId: "user-1",
    name: "React Expert Team",
    bio: "Expert React developers with years of production experience",
    expertise: [
      "React",
      "TypeScript",
      "Performance Optimization",
      "State Management",
    ],
    coursesCount: 3,
    studentsCount: 10000,
    rating: 4.9,
  },
  thumbnail: "/images/courses/react-course.jpg",
  price: 0,
  enrollmentCount: 0,
  rating: 4.9,
  duration: 4800, // 80 hours in minutes
  level: "beginner",
  category: "Frontend Development",
  lessons: [],
  type: "gamified",
  phases,
  totalXP,
  levelThresholds,
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString(),
};

export default reactCourse;
